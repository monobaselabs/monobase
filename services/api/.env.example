# Parmazip Healthcare Platform API Configuration

# ============================================================================
# Server Configuration
# ============================================================================
SERVER_HOST=0.0.0.0
SERVER_PORT=7213
# Alternative port variable (takes precedence over SERVER_PORT)
# PORT=7213

# External URL if different from host:port (used for webhooks, redirects, etc.)
# SERVER_PUBLIC_URL=http://localhost:7213
# Alternative public URL variable (takes precedence over SERVER_PUBLIC_URL)
# PUBLIC_URL=http://localhost:7213

# ============================================================================
# Database Configuration
# ============================================================================
DATABASE_URL=postgres://postgres:password@localhost:5432/parmazip
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_IDLE_TIMEOUT=30000
DB_SSL=false
DB_LOGGING=false

# ============================================================================
# CORS Configuration
# ============================================================================
CORS_ORIGINS=http://localhost:3000,http://localhost:7213
CORS_CREDENTIALS=true
CORS_ALLOW_LOCAL_NETWORK=true    # Allow local network access
CORS_ALLOW_TUNNELING=true        # Allow tunneling services (ngrok, etc.)
CORS_STRICT=false                 # Strict CORS enforcement

# ============================================================================
# Logging Configuration
# ============================================================================
LOG_LEVEL=info                    # debug | info | warn | error
LOG_PRETTY=true                   # Pretty print logs for development

# ============================================================================
# Authentication Configuration
# ============================================================================
# IMPORTANT: Change these in production!
AUTH_BASE_URL=http://localhost:7213
AUTH_SECRET=your-secret-key-at-least-32-characters-long-change-in-production
AUTH_SESSION_EXPIRES_IN=604800    # 7 days in seconds

# Rate limiting for auth endpoints
AUTH_RATE_LIMIT_ENABLED=true
AUTH_RATE_LIMIT_WINDOW=60         # 1 minute in seconds
AUTH_RATE_LIMIT_MAX=10            # Max attempts per window

# Admin users (comma-separated email list)
# AUTH_ADMIN_EMAILS=admin@parmazip.com,support@parmazip.com

# Social authentication providers (optional)
# GOOGLE_CLIENT_ID=your-google-client-id
# GOOGLE_CLIENT_SECRET=your-google-client-secret

# ============================================================================
# General Rate Limiting
# ============================================================================
RATE_LIMIT_ENABLED=true
RATE_LIMIT_MAX=100

# ============================================================================
# Storage Configuration (MinIO/S3)
# ============================================================================
STORAGE_PROVIDER=minio            # minio | s3
STORAGE_ENDPOINT=http://localhost:9000
STORAGE_PUBLIC_ENDPOINT=http://localhost:9000  # External URL for presigned URLs
STORAGE_BUCKET=parmazip-files
STORAGE_REGION=us-east-1
STORAGE_ACCESS_KEY_ID=minioadmin
STORAGE_SECRET_ACCESS_KEY=minioadmin
STORAGE_UPLOAD_URL_EXPIRY=300     # 5 minutes in seconds
STORAGE_DOWNLOAD_URL_EXPIRY=900   # 15 minutes in seconds

# ============================================================================
# Email Configuration
# ============================================================================
EMAIL_PROVIDER=smtp                # smtp | postmark
EMAIL_FROM_NAME=Parmazip
EMAIL_FROM_EMAIL=noreply@parmazip.com

# SMTP Configuration (when EMAIL_PROVIDER=smtp)
# Defaults to Mailpit for development (localhost:1025)
# View captured emails at http://localhost:8025
# SMTP_HOST=localhost
# SMTP_PORT=1025
# SMTP_SECURE=false
# SMTP_USER=
# SMTP_PASS=

# Production SMTP example (Gmail):
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_SECURE=false
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-specific-password

# Postmark Configuration (when EMAIL_PROVIDER=postmark)
# POSTMARK_API_KEY=your-postmark-api-key
# POSTMARK_MESSAGE_STREAM=outbound

# OneSignal Configuration (when EMAIL_PROVIDER=onesignal)
# Note: Use separate app for emails vs push notifications
# ONESIGNAL_EMAIL_APP_ID=your-onesignal-email-app-id
# ONESIGNAL_EMAIL_API_KEY=your-onesignal-email-api-key

# ============================================================================
# Notification Configuration (Optional)
# ============================================================================
# Currently supports OneSignal as the notification provider
# IMPORTANT: Use the SAME app ID that your frontend apps use (patient/provider)
# This allows the API to send notifications to users regardless of which app they're using
# The API targets users by external_id (person ID), not by specific app
# ONESIGNAL_APP_ID=your-onesignal-app-id
# ONESIGNAL_API_KEY=your-onesignal-rest-api-key

# ============================================================================
# WebRTC Configuration (Optional)
# ============================================================================
# ICE servers for WebRTC NAT traversal (STUN/TURN)
# Format: Comma-separated list of URLs: protocol:[username:password@]host:port
# Protocols: stun, turn, turns
# If not set, defaults to Google public STUN servers
# For production, include a TURN server for restrictive networks

# Development (using local coturn from docker-compose.deps.yml):
# WEBRTC_ICE_SERVERS="stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302,turn:parmazip:parmazip123@localhost:3478"

# Production example with external TURN server:
# WEBRTC_ICE_SERVERS="stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302,turn:username:password@turn.example.com:3478,turns:username:password@turn.example.com:5349"

# Simple STUN only (no TURN):
# WEBRTC_ICE_SERVERS="stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302"
